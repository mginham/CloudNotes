name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  CLUSTER_NAME: cloudnotes

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest

    env:
      IMAGE_BACKEND_SHA: ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-backend:${{ github.sha }}
      IMAGE_BACKEND_LATEST: ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-backend:latest
      IMAGE_FRONTEND_SHA: ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-frontend:${{ github.sha }}
      IMAGE_FRONTEND_LATEST: ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-frontend:latest
      KIND_CLUSTER_NAME: ${{ env.CLUSTER_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t $IMAGE_BACKEND_SHA ./backend
          docker push $IMAGE_BACKEND_SHA
          docker tag $IMAGE_BACKEND_SHA $IMAGE_BACKEND_LATEST
          docker push $IMAGE_BACKEND_LATEST

      - name: Build and push frontend image
        run: |
          docker build -t $IMAGE_FRONTEND_SHA ./frontend
          docker push $IMAGE_FRONTEND_SHA
          docker tag $IMAGE_FRONTEND_SHA $IMAGE_FRONTEND_LATEST
          docker push $IMAGE_FRONTEND_LATEST

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create kind cluster
        run: kind create cluster --name $KIND_CLUSTER_NAME --config kind-config.yaml

      - name: Load backend image into kind
        run: kind load docker-image $IMAGE_BACKEND_SHA --name $KIND_CLUSTER_NAME

      - name: Load frontend image into kind
        run: kind load docker-image $IMAGE_FRONTEND_SHA --name $KIND_CLUSTER_NAME

      - name: Install ingress-nginx for kind
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

      - name: Deploy Kubernetes manifests
        run: kubectl apply -f k8s/

      - name: Wait for frontend pod to be ready
        run: kubectl wait --for=condition=ready pod -l app=frontend --timeout=180s

      - name: Run smoke test (in-cluster curl)
        run: |
          kubectl run --rm -i --tty curlpod --image=curlimages/curl --restart=Never -- sh -c "sleep 5; curl -sS -I http://frontend:80 || (kubectl get pods -o wide; kubectl describe svc frontend; exit 1)"

      - name: Delete kind cluster
        if: always()
        run: kind delete cluster --name $KIND_CLUSTER_NAME